%{
/*********************************************************************
 * Copyright (c)2010-2012, by BUPT
 * All rights reserved.

 * FileName:       MSControlModule.sm
 * System:         webrtc
 * SubSystem:      gateway
 * Author:         Yadong Zhang
 * Date:           2015-12-22
 * Version:        1.0
 * Description:
     XMSControlModule state machine。

*******************************************************************************/
%}
/* all possible sate
 * IDLE			initial.
 * CALLPROC		发送INVITE，等待XMS返回200OK
 * JOIN			收到200OK,发送ACK，发送INFO (JOIN)
 * CLOSED 		收到
*/


//指明.sm服务的实际Task类
%class CMSControlModule
//指明需要SMC生成的代码包含哪个文件。只能一个。如多于一个将被忽略。
%header CMSControlModule.h
//初始状态
%start CMSControlModule::IDLE 
//生成的状态集合名称
%map CMSControlModState 
%%

IDLE
{
	onInvite(msg:TUniNetMsg*)
	CALLPROC
	{
		setTimer(SIPCALL_200OK_TIMEOUT);
		sendInviteToMS(msg); //在函数里添加判断INVITE是IMS or Rtc
	}
	
}

CALLPROC
{
	//收到响应 1XX
	onResponse(msg:TUniNetMsg*) 
	[true == ctxt.isResp1xx(msg)]   	
	nil 
	{
	//	stopTimer();
	//  sendToDispatcher(msg); // 不转发，即使是180
	}
	
	onResponse(msg:TUniNetMsg*)
	[true == ctxt.isResp3xx_6xx(msg)]   //如果收到的是3xx~6xx的错误响应，释放会话
	CLOSED
	{
		stopTimer();
		sendRespToSipCall(msg);
	}
	
	onResponse(msg:TUniNetMsg*) 
	[true == ctxt.isResp2xx(msg) && (true == ctxt.isJoinFinished() || false == isBothCallFinished())]    	//收到200 OK会话建立成功
	IDLE
	{
		stopTimer();
		
		sendRespToSipCall(msg);	//返回SDP给SIP CALL模块		
		sendAckToMS(msg);
	}
	
	onResponse(msg:TUniNetMsg*)
	[true == ctxt.isResp2xx(msg) && (false == ctxt.isJoinFinished() && true == isBothCallFinished())]
	JOIN
	{
		stopTimer();
		sendAnswerToSipCall(msg);
		sendInfoToMS();
		setTimer(SIPCALL_200OK_TIMEOUT);
	}
	
	onBye(msg:TUniNetMsg*)
	[true == ctxt.isFromMS(msg)]
	CLOSED
	{
		stopTimer();
		sendByeToSipCall();
	}
	
	onBye(msg:TUniNetMsg*)
	[false == ctxt.isFromMS(msg)]
	CLOSED
	{
		stopTimer();
		sendByeToMS(); //根据IMS或RTC是否建立成功，向MS-IMS和MS-WEB发送BYE，释放资源
	}

	onTimeOut(timerMark:TTimeMarkExt)  	//等待响应超时，会话释放
	CLOSED
	{	
		stopTimer();
	}
	
}

JOIN
{
	onResponse(msg:TUniNetMsg*)
	[true == ctxt.isResp1xx(msg)]   	
	nil 
	{
	//	stopTimer();
	//  sendToDispatcher(msg); // 不转发，即使是180
	}
	
	onResponse(msg:TUniNetMsg*)
	[true == ctxt.isResp3xx_6xx(msg)]   //如果收到的是3xx~6xx的错误响应，释放会话
	CLOSED
	{
		stopTimer();
		sendByeToSipCall();
	}
	
	onResponse(msg:TUniNetMsg*) 
	[true == ctxt.isResp2xx(msg)]    	//收到200 OK说明JOIN成功，进入IDLE状态
	IDLE
	{
		stopTimer();
	}
	
	onTimeOut(timerMark:TTimeMarkExt)  	//等待响应超时，会话释放
	CLOSED
	{	
		stopTimer();
	}
}


CLOSED
Entry
{
	endTask();
}
{
}


Default
{
	onInvite(msg:TUniNetMsg*)
	nil
	{
//		endTask();
	}
	onResponse(msg:TUniNetMsg*)
	nil
	{
//		endTask();
	}
	onAck(msg:TUniNetMsg*)
	nil
	{
//		endTask();
	}
	onCancel(msg:TUniNetMsg*)
	nil
	{
//		endTask();
	}
	onBye(msg:TUniNetMsg*)
	nil
	{
//		endTask();
	}
	onTimeOut(timerMark:TTimeMarkExt)
	nil
	{
		endTask();
	}
}

%%